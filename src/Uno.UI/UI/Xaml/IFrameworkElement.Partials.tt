<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>

<#
	List<string> DefaultPartials = new List<string>
	{
		@"..\..\UI\Xaml\FrameworkElement.EffectiveViewport.cs"
	};
	
	void GenerateDefaultPartialClasses(params string[] types)
		=> GeneratePartialClasses(DefaultPartials, types);

	void GeneratePartialClasses(IEnumerable<string> partialFiles, params string[] types)
	{
		foreach(var include in partialFiles.Select(path => Host.ResolvePath(path)))
		foreach(var type in types)
		{
			var typeParts = type.Split('.');
			var spaceName = string.Join(".", typeParts.Take(typeParts.Length - 1));
			var className = typeParts.Last();

			var partialContent = System.IO.File.ReadAllText(include);
			partialContent = "#define TEMPLATED\r\n" + partialContent;
			partialContent = "#define IS_NATIVE_ELEMENT\r\n" + partialContent;
			partialContent = Regex.Replace(partialContent, @"^using _This\s*=.*$", $"using _This = {type};", RegexOptions.Multiline);
			partialContent = Regex.Replace(partialContent, @"^namespace [a-zA-Z0-9_\.\s]+$", $"namespace {spaceName}", RegexOptions.Multiline);
			partialContent = Regex.Replace(partialContent, @"partial class [a-zA-Z0-9_]+", $"partial class {className}", RegexOptions.Multiline);

			var targetFile = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), $"{className}.{Path.GetFileNameWithoutExtension(include)}.g{Path.GetExtension(include)}");
			File.WriteAllText(targetFile, partialContent);
		}
	}
#>
