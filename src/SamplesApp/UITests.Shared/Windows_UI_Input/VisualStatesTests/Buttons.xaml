<Page
	x:Class="UITests.Shared.Windows_UI_Input.VisualStatesTests.Buttons"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:UITests.Shared.Windows_UI_Input.VisualStatesTests"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Page.Resources>
		<SolidColorBrush x:Key="ButtonsBackground" Color="#33000000" />

		<ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
			<StackPanel Margin="10,5" Padding="5" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ButtonsBackground}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Normal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="PointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="PointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Pressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Pressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Disabled" />
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>

				<ContentPresenter />
				<TextBlock x:Name="State" Text="__state__" />
			</StackPanel>
		</ControlTemplate>

		<ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
			<StackPanel Margin="10,5" Padding="5" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ButtonsBackground}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Normal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="PointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="PointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Pressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Pressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Disabled" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Checked">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Checked" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedPointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedPointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedPressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedPressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedDisabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedDisabled" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Indeterminate">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Indeterminate" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminatePointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminatePointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminatePressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminatePressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminateDisabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminateDisabled" />
							</VisualState.Setters>
						</VisualState>

					</VisualStateGroup>

				</VisualStateManager.VisualStateGroups>

				<ContentPresenter />
				<TextBlock x:Name="State" Text="__state__" />
			</StackPanel>
		</ControlTemplate>

		<ControlTemplate x:Key="RadioButtonTemplate" TargetType="RadioButton">
			<StackPanel Margin="10,5" Padding="5" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ButtonsBackground}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Normal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="PointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="PointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Pressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Pressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Disabled" />
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>

				</VisualStateManager.VisualStateGroups>

				<ContentPresenter />
				<TextBlock x:Name="State" Text="__state__" />
			</StackPanel>
		</ControlTemplate>

		<ControlTemplate x:Key="HyperlinkButtonTemplate" TargetType="HyperlinkButton">
			<StackPanel Margin="10,5" Padding="5" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ButtonsBackground}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Normal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="PointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="PointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Pressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Pressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="Disabled" />
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>

				</VisualStateManager.VisualStateGroups>

				<ContentPresenter />
				<TextBlock x:Name="State" Text="__state__" />
			</StackPanel>
		</ControlTemplate>

		<ControlTemplate x:Key="CheckBoxTemplate" TargetType="CheckBox">
			<StackPanel Margin="10,5" Padding="5" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ButtonsBackground}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CombinedStates">
						<VisualState x:Name="UncheckedNormal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="UncheckedNormal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="UncheckedPointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="UncheckedPointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="UncheckedPressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="UncheckedPressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="UncheckedDisabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="UncheckedDisabled" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedNormal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedNormal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedPointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedPointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedPressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedPressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="CheckedDisabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="CheckedDisabled" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminateNormal">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminateNormal" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminatePointerOver">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminatePointerOver" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminatePressed">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminatePressed" />
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="IndeterminateDisabled">
							<VisualState.Setters>
								<Setter Target="State.Text" Value="IndeterminateDisabled" />
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>

				<ContentPresenter />
				<TextBlock x:Name="State" Text="__state__" />
			</StackPanel>
		</ControlTemplate>
	</Page.Resources>

	<ScrollViewer>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="250" />
			</Grid.ColumnDefinitions>

			<StackPanel>
				<TextBlock Text="Button (CommonStates: Normal | PointerOver | Pressed | Disabled)" TextWrapping="Wrap" />
				<Button
					x:Name="MyButton"
					Content="Button"
					Template="{StaticResource ButtonTemplate}"
					Loaded="ListenVisualStates" />

				<TextBlock Text="ToggleButton (CommonStates: Normal | UncheckedPointerOver | UncheckedPressed | UncheckedDisabled | Checked | CheckedPointerOver | CheckedPressed | CheckedDisabled | Indeterminate | IndeterminatePointerOver | IndeterminatePressed | IndeterminateDisabled)" TextWrapping="Wrap" />
				<ToggleButton
					x:Name="MyIndeterminateToggleButton"
					Content="Indeterminate Toggle button"
					IsThreeState="True"
					IsChecked="{x:Null}"
					Template="{StaticResource ToggleButtonTemplate}"
					Loaded="ListenVisualStates" />
				<ToggleButton
					x:Name="MyCheckedToggleButton"
					Content="Checked toggle button"
					IsChecked="True"
					Template="{StaticResource ToggleButtonTemplate}"
					Loaded="ListenVisualStates" />
				<ToggleButton
					x:Name="MyUncheckedToggleButton"
					Content="Unchecked toggle button"
					IsChecked="False"
					Template="{StaticResource ToggleButtonTemplate}"
					Loaded="ListenVisualStates" />

				<TextBlock Text="RadioButton (CommonStates: Normal | PointerOver | Pressed | Disabled)" TextWrapping="Wrap" />
				<RadioButton
					x:Name="MyRadioButton"
					Content="Radio button"
					Template="{StaticResource RadioButtonTemplate}"
					Loaded="ListenVisualStates" />

				<TextBlock Text="HyperlinkButton (CommonStates: Normal | PointerOver | Pressed | Disabled)" TextWrapping="Wrap" />
				<HyperlinkButton
					x:Name="MyHyperlinkButton"
					Content="Hyperlink button"
					Template="{StaticResource HyperlinkButtonTemplate}"
					Loaded="ListenVisualStates" />

				<TextBlock Text="CheckBox (**Combined**States: UncheckedNormal | UncheckedPointerOver | UncheckedPressed | UncheckedDisabled | CheckedNormal | CheckedPointerOver | CheckedPressed | CheckedDisabled | IndeterminateNormal | IndeterminatePointerOver | IndeterminatePressed | IndeterminateDisabled)" TextWrapping="Wrap" />
				<CheckBox
					x:Name="MyIndeterminateCheckbox"
					Content="Indeterminate checkbox"
					IsThreeState="True"
					IsChecked="{x:Null}"
					Template="{StaticResource CheckBoxTemplate}"
					Loaded="ListenVisualStates" />
				<CheckBox
					x:Name="MyCheckedCheckbox"
					Content="Checked checkbox"
					IsChecked="True"
					Template="{StaticResource CheckBoxTemplate}"
					Loaded="ListenVisualStates" />
				<CheckBox
					x:Name="MyUncheckedCheckbox"
					Content="Unchecked checkbox"
					IsChecked="False"
					Template="{StaticResource CheckBoxTemplate}"
					Loaded="ListenVisualStates" />

				<TextBlock Text="Hyperlink (Hardcoded Pressed state)" TextWrapping="Wrap" />
				<TextBlock x:Name="MyHyperlink" Margin="10,5">
					<Hyperlink>This is an hyperlink</Hyperlink>
				</TextBlock>

			</StackPanel>

			<TextBlock
				x:Name="VisualStatesLog"
				TextWrapping="Wrap"
				Grid.Column="1" />
		</Grid>
	</ScrollViewer>
</Page>
