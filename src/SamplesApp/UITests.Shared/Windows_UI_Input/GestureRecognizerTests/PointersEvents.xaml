<Page
	x:Class="UITests.Shared.Windows_UI_Input.GestureRecognizer.PointersEvents"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:not_win="http://platform.uno"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="not_win">

	<Grid>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState>
					<VisualState.StateTriggers>
						<!--<AdaptiveTrigger MinWindowWidth="700" />-->
						<StateTrigger IsActive="{Binding ElementName=_splitButton, Path=IsChecked}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<!--<Setter Target="_tabs.Visibility" Value="Collapsed" />-->
						<Setter Target="_configColumn.Width" Value="300" />
						<Setter Target="_benchColumn.Width" Value="*" />
						<Setter Target="_outputColumn.Width" Value="2*" />
					</VisualState.Setters>
				</VisualState>
				<win:VisualState x:Name="Config">
					<VisualState.StateTriggers>
						<StateTrigger IsActive="{Binding ElementName=_configButton, Path=IsChecked}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="_tabs.Visibility" Value="Visible" />
						<Setter Target="_configColumn.Width" Value="*" />
						<Setter Target="_benchColumn.Width" Value="0" />
						<Setter Target="_outputColumn.Width" Value="0" />
					</VisualState.Setters>
				</win:VisualState>
				<win:VisualState x:Name="Bench">
					<VisualState.StateTriggers>
						<StateTrigger IsActive="{Binding ElementName=_benchButton, Path=IsChecked}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="_tabs.Visibility" Value="Visible" />
						<Setter Target="_configColumn.Width" Value="0" />
						<Setter Target="_benchColumn.Width" Value="*" />
						<Setter Target="_outputColumn.Width" Value="0" />
					</VisualState.Setters>
				</win:VisualState>
				<win:VisualState x:Name="Output">
					<VisualState.StateTriggers>
						<StateTrigger IsActive="{Binding ElementName=_outputButton, Path=IsChecked}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="_tabs.Visibility" Value="Visible" />
						<Setter Target="_configColumn.Width" Value="0" />
						<Setter Target="_benchColumn.Width" Value="0" />
						<Setter Target="_outputColumn.Width" Value="*" />
					</VisualState.Setters>
				</win:VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Grid.ColumnDefinitions>
			<ColumnDefinition x:Name="_configColumn"/>
			<ColumnDefinition x:Name="_benchColumn" />
			<ColumnDefinition x:Name="_outputColumn" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>

		<StackPanel Orientation="Horizontal" x:Name="_tabs" Grid.ColumnSpan="3">
			<RadioButton GroupName="TabView" Content="Splitted" x:Name="_splitButton" IsChecked="True" />
			<RadioButton GroupName="TabView" Content="Config" x:Name="_configButton" />
			<RadioButton GroupName="TabView" Content="Bench" x:Name="_benchButton" />
			<RadioButton GroupName="TabView" Content="Output" x:Name="_outputButton" />

			<Button
				Grid.ColumnSpan="3"
				Grid.RowSpan="2"
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				Content="Clear"
				Click="ClearLog" />
		</StackPanel>

		<ScrollViewer Grid.Column="0" Grid.Row="1">
			<StackPanel Padding="10,0">
				<TextBlock
					Text="This is a test bench to check the expected properties of pointer events args. Configure below the pointer you are going to use, then test it in the pink zone on right."
					TextWrapping="Wrap"/>

				<ComboBox
					x:Name="_pointerType"
					Header="Pointer type:"
					SelectionChanged="OnPointerTypeChanged"  />

				<TextBox
					x:Name="_pointerId" 
					Header="Pointer ID:"
					Width="75"
					HorizontalAlignment="Left" />

				<TextBlock Text="Expected buttons:" />
				<CheckBox
					x:Name="_leftButton" 
					Content="Left"
					IsThreeState="True"
					IsChecked="True" />
				<CheckBox
					x:Name="_middleButton" 
					Content="Middle"
					IsThreeState="True"
					IsChecked="False" />
				<CheckBox
					x:Name="_rightButton" 
					Content="Right"
					IsThreeState="True"
					IsChecked="False" />
				<CheckBox
					x:Name="_barrelButton"
					Content="Pen's barrel"
					IsThreeState="True"
					IsChecked="False" />
				<CheckBox
					x:Name="_eraserButton"
					Content="Pen's eraser"
					IsThreeState="True"
					IsChecked="False" />
				<CheckBox
					x:Name="_x1Button"
					Content="X Button 1"
					IsThreeState="True"
					IsChecked="False" />
				<CheckBox
					x:Name="_x2Button"
					Content="X Button 2"
					IsThreeState="True"
					IsChecked="False" />

				<TextBlock Text="Expected properties:" />
				<CheckBox
					x:Name="_inRange" 
					Content="In range"
					IsThreeState="True"
					IsChecked="True" />
				<CheckBox
					x:Name="_inContact" 
					Content="In contact"
					IsThreeState="True"
					IsChecked="{x:Null}" />

				<TextBlock Text="Bench config:" />
				<ToggleSwitch
					x:Name="_handledEventsToo"
					Header="Handled events too"
					OnContent="Handlers added w/ handledEventsToo"
					OffContent="Unhandled events only"
					Toggled="OnConfigChanged" />
				<ToggleSwitch
					x:Name="_allEventsOnParent" 
					Header="All events for parent"
					OnContent="Parent subscribe to all events"
					OffContent="Parent subscribe as config"
					Toggled="OnConfigChanged"
					IsOn="False" />
				<ToggleSwitch
					x:Name="_horizontalScroll" 
					Header="Horizontal scroll"
					OnContent="Horizontal scroll enabled"
					OffContent="Horizontal scroll disabled"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<ToggleSwitch
					x:Name="_verticalScroll" 
					Header="Vertical scroll"
					OnContent="Vertical scroll enabled"
					OffContent="Vertical scroll disabled"
					Toggled="OnConfigChanged"
					IsOn="True" />

				<ToggleSwitch
					x:Name="_ptEntered" 
					Header="Pointer entered"
					OnContent="Subscribed to pointer entered"
					OffContent="Pointer entered muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptEnteredHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptEntered, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptPressed" 
					Header="Pointer pressed"
					OnContent="Subscribed to pointer pressed"
					OffContent="Pointer pressed muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptPressedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptPressed, Path=IsOn}"/>
				<CheckBox
					x:Name="_ptPressedCapture"
					Content="Capture pointer"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptPressed, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptMoved" 
					Header="Pointer moved"
					OnContent="Subscribed to pointer moved"
					OffContent="Pointer moved muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptMovedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptMoved, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptReleased" 
					Header="Pointer released"
					OnContent="Subscribed to pointer released"
					OffContent="Pointer released muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptReleasedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptReleased, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptExited" 
					Header="Pointer exited"
					OnContent="Subscribed to pointer exited"
					OffContent="Pointer exited muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptExitedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptExited, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptCanceled" 
					Header="Pointer canceled"
					OnContent="Subscribed to pointer canceled"
					OffContent="Pointer canceled muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptCanceledHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptCanceled, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptCaptureLost" 
					Header="Pointer capture lost"
					OnContent="Subscribed to pointer capture lost"
					OffContent="Pointer capture lost muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptCaptureLostHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptCaptureLost, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_ptWheel" 
					Header="Pointer wheel changed"
					OnContent="Subscribed to pointer wheel"
					OffContent="Pointer wheel muted"
					Toggled="OnConfigChanged"
					IsOn="True" />
				<CheckBox
					x:Name="_ptWheelHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_ptWheel, Path=IsOn}"/>

				<ComboBox
					x:Name="_manipMode" 
					Header="Manipulation mode: "
					SelectionChanged="OnManipModeChanged" />
				<ToggleSwitch
					x:Name="_manipStarting" 
					Header="Manipulation starting"
					OnContent="Subscribed to manip starting"
					OffContent="Manip starting muted"
					Toggled="OnConfigChanged" />
				<CheckBox
					x:Name="_manipStartingHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_manipStarting, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_manipStarted" 
					Header="Manipulation started"
					OnContent="Subscribed to manip started"
					OffContent="Manip started muted"
					Toggled="OnConfigChanged" />
				<CheckBox
					x:Name="_manipStartedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_manipStarted, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_manipDelta"
					Header="Manipulation delta"
					OnContent="Subscribed to manip delta"
					OffContent="Manip delta muted"
					Toggled="OnConfigChanged" />
				<CheckBox
					x:Name="_manipDeltaHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_manipDelta, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_manipCompleted" 
					Header="Manipulation completed"
					OnContent="Subscribed to manip completed"
					OffContent="Manip completed muted"
					Toggled="OnConfigChanged" />
				<CheckBox
					x:Name="_manipCompletedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_manipCompleted, Path=IsOn}"/>

				<ToggleSwitch
					x:Name="_gestureTapped" 
					Header="Tapped"
					OnContent="Subscribed to tap"
					OffContent="Tap disabled"
					Toggled="OnConfigChanged"
					IsOn="False" />
				<CheckBox
					x:Name="_gestureTappedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_gestureTapped, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_gestureDoubleTapped" 
					Header="Double tapped"
					OnContent="Subscribed to double tap"
					OffContent="Double tap disabled"
					Toggled="OnConfigChanged"
					IsOn="False" />
				<CheckBox
					x:Name="_gestureDoubleTappedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_gestureDoubleTapped, Path=IsOn}"/>
				<ToggleSwitch
					x:Name="_gestureRightTapped" 
					Header="Right tapped"
					OnContent="Subscribed to right tap"
					OffContent="Right tap disabled"
					Toggled="OnConfigChanged"
					IsOn="False" />
				<CheckBox
					x:Name="_gestureRightTappedHandle" 
					Content="Handle event"
					Margin="20, 0"
					Visibility="{Binding ElementName=_gestureRightTapped, Path=IsOn}"/>


				<Slider
					x:Name="_translateX"
					Header="Translate X"
					Minimum="-300"
					Maximum="300"
					Value="0" />
				<Slider
					x:Name="_translateY"
					Header="Translate Y"
					Minimum="-300"
					Maximum="300"
					Value="0" />
				<Slider
					x:Name="_rotate"
					Header="Rotation"
					Minimum="-360"
					Maximum="360"
					Value="0"/>
				<Slider
					x:Name="_scaleX"
					Header="Scale X"
					Minimum=".01"
					Maximum="10"
					Value="1"
					StepFrequency=".01" />
				<Slider
					x:Name="_scaleY"
					Header="Scale Y"
					Minimum=".01"
					Maximum="10"
					Value="1"
					StepFrequency=".01" />
				<Slider
					x:Name="_skewX"
					Header="Skew X"
					Minimum="-360"
					Maximum="360"
					Value="0" />
				<Slider
					x:Name="_skewY"
					Header="Skew Y"
					Minimum="-360"
					Maximum="360"
					Value="0" />
					
			</StackPanel>
		</ScrollViewer>

		<ScrollViewer Grid.Column="1" Grid.Row="1" x:Name="_myScrollViewer">
			<Grid
				x:Name="TouchTargetParent"
				MinWidth="2048"
				MinHeight="2048"
				Background="DeepSkyBlue">
				<Border
					x:Name="TouchTarget"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					Margin="50, 50, 0, 0"
					Width="200"
					Height="200"
					Background="DeepPink">
					<Border.RenderTransform>
						<CompositeTransform
							TranslateX="{Binding ElementName=_translateX, Path=Value}"
							TranslateY="{Binding ElementName=_translateY, Path=Value}"
							Rotation="{Binding ElementName=_rotate, Path=Value}"
							ScaleX="{Binding ElementName=_scaleX, Path=Value}"
							ScaleY="{Binding ElementName=_scaleY, Path=Value}"
							SkewX="{Binding ElementName=_skewX, Path=Value}"
							SkewY="{Binding ElementName=_skewY, Path=Value}" />
					</Border.RenderTransform>
				</Border>
			</Grid>
		</ScrollViewer>

		<ListView Grid.Column="2" Grid.Row="1" x:Name="_logs">
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<StackPanel>
						<TextBlock>
							<Run Foreground="{Binding Sender.Background}" Text="{Binding Sender.Name}" />
							<Run Text="{Binding Name}"/>
							<Run Text="{Binding ValidityBullet}"/>
						</TextBlock>
						<TextBlock Text="{Binding Details}" TextWrapping="Wrap" FontSize="8" />
					</StackPanel>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ListView>
	</Grid>
</Page>
