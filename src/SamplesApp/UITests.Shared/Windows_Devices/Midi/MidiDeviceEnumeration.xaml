<UserControl
    x:Class="UITests.Shared.Windows_Devices.Midi.MidiDeviceEnumerationTests"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:UITests.Shared.Windows_Devices"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="1000"
    d:DesignWidth="1000"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="ScenarioHeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="SampleHeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="DeviceListStyle" TargetType="ListView">
            <Setter Property="Height" Value="230" />
            <Setter Property="MaxHeight" Value="230" />
            <Setter Property="Width" Value="300" />
            <Setter Property="Margin" Value="0,0,20,0" />
        </Style>

        <Style x:Key="DevicePropertiesStyle" TargetType="ListView">
            <Setter Property="Height" Value="230" />
            <Setter Property="MaxHeight" Value="230" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MaxWidth" Value="900" />
            <Setter Property="Margin" Value="0,0,20,0" />
        </Style>

        <Style x:Key="ScenarioButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI Light" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="0,10,0,20" />
        </Style>

    </UserControl.Resources>

    <Grid Margin="12,20,12,12" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="rootGrid" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="0,0,0,10">
                <TextBlock Style="{StaticResource SampleHeaderTextStyle}" Text="Description" />
                <TextBlock Text="This scenario illustrates MIDI Device Enumeration. Connect a MIDI device to see it in the list." TextWrapping="Wrap" />
            </StackPanel>

            <!--  Main content is scrollable  -->
            <ScrollViewer
                Grid.Row="1"
                Margin="0,0,0,40"
                VerticalScrollBarVisibility="Auto"
                VerticalScrollMode="Auto">
                <RelativePanel HorizontalAlignment="Stretch">
                    <!--  Auto-detect MIDI devices  -->
                    <TextBlock
                        x:Name="deviceAutoDetectToggleLabel"
                        Style="{StaticResource ScenarioHeaderTextStyle}"
                        Text="AUTO-DETECT" />
                    <ToggleSwitch
                        x:Name="deviceAutoDetectToggle"
                        Margin="40,23,0,0"
                        IsOn="False"
                        Toggled="DeviceAutoDetectToggle_Toggled" />

                    <!--  List input MIDI devices  -->
                    <TextBlock
                        x:Name="listInputDevicesButtonLabel"
                        Style="{StaticResource ScenarioHeaderTextStyle}"
                        Text="INPUT" />
                    <Button
                        x:Name="listInputDevicesButton"
                        Click="listInputDevicesButton_Click"
                        Content="List all input devices"
                        Style="{StaticResource ScenarioButtonStyle}" />

                    <!--  Input MIDI device details  -->
                    <ListView
                        x:Name="inputDevices"
                        ItemsSource="{Binding InputDevices}"
                        SelectionChanged="inputDevices_SelectionChanged"
                        Style="{StaticResource DeviceListStyle}" />
                    <ListView
                        x:Name="inputDeviceProperties"
                        ItemsSource="{Binding InputDeviceProperties}"
                        Style="{StaticResource DevicePropertiesStyle}" />

                    <!--  List output MIDI devices  -->
                    <TextBlock
                        x:Name="listOutputDevicesButtonLabel"
                        Style="{StaticResource ScenarioHeaderTextStyle}"
                        Text="OUTPUT" />
                    <Button
                        x:Name="listOutputDevicesButton"
                        Click="listOutputDevicesButton_Click"
                        Content="List all output devices"
                        Style="{StaticResource ScenarioButtonStyle}" />

                    <!--  Output MIDI device details  -->
                    <ListView
                        x:Name="outputDevices"
                        ItemsSource="{Binding OutputDevices}"
                        SelectionChanged="outputDevices_SelectionChanged"
                        Style="{StaticResource DeviceListStyle}" />
                    <ListView
                        x:Name="outputDeviceProperties"
                        ItemsSource="{Binding OutputDeviceProperties}"
                        Style="{StaticResource DevicePropertiesStyle}" />
                </RelativePanel>
            </ScrollViewer>

            <!--
                Status Block for providing messages to the user.  Use the
                NotifyUser() method to populate the message
            -->
            <Border
                x:Name="errorBorder"
                Grid.Row="2"
                Background="Orange" />
            <TextBlock
                x:Name="statusBlock"
                Grid.Row="2"
                Margin="12,10,12,10"
                Text="Status"
                Visibility="Visible" />
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="deviceAutoDetectToggle.(RelativePanel.RightOf)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listInputDevicesButtonLabel.(RelativePanel.AlignLeftWith)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listInputDevicesButtonLabel.(RelativePanel.Below)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listInputDevicesButton.(RelativePanel.AlignLeftWith)" Value="listInputDevicesButtonLabel" />
                        <Setter Target="listInputDevicesButton.(RelativePanel.Below)" Value="listInputDevicesButtonLabel" />
                        <Setter Target="inputDevices.(RelativePanel.AlignLeftWith)" Value="listInputDevicesButton" />
                        <Setter Target="inputDevices.(RelativePanel.Below)" Value="listInputDevicesButton" />
                        <!--  Properties are beside the device list  -->
                        <Setter Target="inputDeviceProperties.(RelativePanel.AlignTopWith)" Value="inputDevices" />
                        <Setter Target="inputDeviceProperties.(RelativePanel.RightOf)" Value="inputDevices" />
                        <Setter Target="listOutputDevicesButtonLabel.(RelativePanel.AlignLeftWith)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listOutputDevicesButtonLabel.(RelativePanel.Below)" Value="inputDeviceProperties" />
                        <Setter Target="listOutputDevicesButton.(RelativePanel.AlignLeftWith)" Value="listOutputDevicesButtonLabel" />
                        <Setter Target="listOutputDevicesButton.(RelativePanel.Below)" Value="listOutputDevicesButtonLabel" />
                        <Setter Target="outputDevices.(RelativePanel.AlignLeftWith)" Value="listOutputDevicesButton" />
                        <Setter Target="outputDevices.(RelativePanel.Below)" Value="listOutputDevicesButton" />
                        <!--  Properties are beside the device list  -->
                        <Setter Target="outputDeviceProperties.(RelativePanel.AlignTopWith)" Value="outputDevices" />
                        <Setter Target="outputDeviceProperties.(RelativePanel.RightOf)" Value="outputDevices" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="40" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="deviceAutoDetectToggle.(RelativePanel.RightOf)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listInputDevicesButtonLabel.(RelativePanel.AlignLeftWith)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listInputDevicesButtonLabel.(RelativePanel.Below)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listInputDevicesButton.(RelativePanel.AlignLeftWith)" Value="listInputDevicesButtonLabel" />
                        <Setter Target="listInputDevicesButton.(RelativePanel.Below)" Value="listInputDevicesButtonLabel" />
                        <Setter Target="inputDevices.(RelativePanel.AlignLeftWith)" Value="listInputDevicesButton" />
                        <Setter Target="inputDevices.(RelativePanel.Below)" Value="listInputDevicesButton" />
                        <!--  Move the properties to below the device list  -->
                        <Setter Target="inputDeviceProperties.(RelativePanel.AlignLeftWith)" Value="inputDevices" />
                        <Setter Target="inputDeviceProperties.(RelativePanel.Below)" Value="inputDevices" />
                        <Setter Target="inputDeviceProperties.(Margin)" Value="0,20,20,0" />
                        <Setter Target="listOutputDevicesButtonLabel.(RelativePanel.AlignLeftWith)" Value="deviceAutoDetectToggleLabel" />
                        <Setter Target="listOutputDevicesButtonLabel.(RelativePanel.Below)" Value="inputDeviceProperties" />
                        <Setter Target="listOutputDevicesButton.(RelativePanel.AlignLeftWith)" Value="listOutputDevicesButtonLabel" />
                        <Setter Target="listOutputDevicesButton.(RelativePanel.Below)" Value="listOutputDevicesButtonLabel" />
                        <Setter Target="outputDevices.(RelativePanel.AlignLeftWith)" Value="listOutputDevicesButton" />
                        <Setter Target="outputDevices.(RelativePanel.Below)" Value="listOutputDevicesButton" />
                        <!--  Move the properties to below the device list  -->
                        <Setter Target="outputDeviceProperties.(RelativePanel.AlignLeftWith)" Value="outputDevices" />
                        <Setter Target="outputDeviceProperties.(RelativePanel.Below)" Value="outputDevices" />
                        <Setter Target="outputDeviceProperties.(Margin)" Value="0,20,20,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
